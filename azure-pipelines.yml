trigger:
  - develop

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build job
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: self
            submodules: true
          - task: Docker@2
            inputs:
              containerRegistry: $(CKAN_CONTAINER_REGISTRY)
              repository: $(CKAN_CONTAINER_REPOSITORY)
              tags: base
              command: "build"
              Dockerfile: "ckan-build/ckan/Dockerfile"
          - task: Docker@2
            inputs:
              containerRegistry: $(CKAN_CONTAINER_REGISTRY)
              repository: $(CKAN_CONTAINER_REPOSITORY)
              command: "build"
              Dockerfile: "**/ckan-build/ckan-service/Dockerfile"
              arguments: "--build-arg baseImage=$(CKAN_BASE_IMAGE)"
              buildContext: $(Build.Repository.LocalPath)
              tags: |
                $(Build.BuildId)
          - task: Docker@2
            inputs:
              containerRegistry: $(CKAN_CONTAINER_REGISTRY)
              repository: $(CKAN_CONTAINER_REPOSITORY)
              command: "push"
              tags: |
                $(Build.BuildId)

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    jobs:
      - deployment: Deploy
        displayName: Deploy job
        pool:
          vmImage: ubuntu-latest
        environment: $(ENVIRONMENT)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: Kubernetes@0
                  displayName: "Deploy job"
                  inputs:
                    kubernetesServiceConnection: $(KUBERNETES_SERVICE_CON)
                    namespace: $(KUBERNETES_NAMESPACE)
                    command: "set"
                    arguments: $(KUBERNETES_DEPLOY_ARG)
